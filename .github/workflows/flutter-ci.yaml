name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    tags:
      - v*

jobs:
  build-android:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    # Setup ssh key for some repositories
    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH }}
        name: id_ed25519
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        flutter-version: '2.10.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    #- run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    #- run: flutter analyze .
    
    # Run widget tests for our flutter project.
    #- run: flutter test
    
    # Build apk.
    - run: flutter build apk
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v2
      with:
        name: release-android
        path: build/app/outputs/apk/release/app-release.apk
  build-ios:
    # This job will run on ubuntu virtual machine
    runs-on: macos-latest
    steps:
    # Setup ssh key for some repositories
    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH }}
        name: id_ed25519
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v2

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        flutter-version: '2.10.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    #- run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    #- run: flutter analyze .
    
    # Run widget tests for our flutter project.
    #- run: flutter test
    
    # Build apk.
    - run: flutter build ipa --release
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v2
      with:
        name: release-ios
        path: build/ios/ipa/
  build-web:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    # Setup ssh key for some repositories
    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH }}
        name: id_ed25519
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v2

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        flutter-version: '2.10.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    #- run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    #- run: flutter analyze .
    
    # Run widget tests for our flutter project.
    #- run: flutter test
    
    # Build apk.
    - run: flutter build web
    
    - uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v2
      with:
        name: release-web
        path: build/web/
  build-windows:
    # This job will run on ubuntu virtual machine
    runs-on: windows-latest
    steps:
    # Setup ssh key for some repositories
    - uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH }}
        name: id_ed25519
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v2

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        flutter-version: '2.10.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    #- run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    #- run: flutter analyze .
    
    # Run widget tests for our flutter project.
    #- run: flutter test
    
    # Build apk.
    - run: flutter build windows
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v2
      with:
        name: release-windows
        path: build/windows/runner/Release/
  create-release:
      needs: [build-windows, build-web, build-ios, build-android]
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "release-windows.zip,release-web.zip,release-android.zip,release-ios.zip"
        omitBody: true
        token: ${{ secrets.GITHUB_TOKEN }}
